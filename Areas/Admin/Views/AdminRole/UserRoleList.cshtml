@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<EntityLayer.Concrate.AppUser>
@{
    ViewData["Title"] = "UserRoleList";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<body>
    <div class="@*page-wrapper*@">
        <div class="row">

            <div class="col-md-12">

                <div class="card">
                    <ul class="navbar-nav float-start me-auto" style="margin-left:15px;">
                        <li class="nav-item search-box">
                            <a class="nav-link waves-effect waves-dark"
                               href="javascript:void(0)">
                                <i class="mdi mdi-magnify fs-4"></i>
                            </a>
                            <a>Ara</a>
                            <form method="get" class="app-search position-absolute">
                                <input type="text"
                                       class="form-control"
                                       placeholder="Search &amp; enter" value="@ViewData["CurrentFilterSearch"]" name="SearchString" />
                                <a class="srh-btn"><i class="mdi mdi-window-close"></i></a>
                            </form>
                        </li>
                    </ul>
                    <div class="card-body">

                        <h5 class="card-title">Roller <small>>@ViewData["CurrentFilterSearch"]</small></h5>


                        <div class="table-responsive">

                            <table class="table table-striped table-bordered" >
                                <thead>
                                    <tr>
                                        <th>
                                            <a style="color:black;"  asp-action="UserRoleList" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">İsim Soyisim</a>
                                            @if (ViewData["CurrentSort"] != null)
                                            {


                                                @if (ViewData["CurrentSort"].ToString() == "Name")
                                                {
                                                    <i class="fas fa-arrow-up"></i>
                                                }
                                                else if (ViewData["CurrentSort"].ToString() == "NameDesc")
                                                {
                                                    <i class="fas fa-arrow-down"></i>
                                                }
                                            }
                                        </th>
                                        <th>
                                            <a style="color:black;" asp-action="UserRoleList" asp-route-sortOrder="@ViewData["MailSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Email</a>

                                            @if (ViewData["CurrentSort"] != null)
                                            {
                                                @if (ViewData["CurrentSort"].ToString() == "Mail")
                                                {
                                                    <i class="fas fa-arrow-up"></i>
                                                }
                                                else if (ViewData["CurrentSort"].ToString() == "MailDesc")
                                                {
                                                    <i class="fas fa-arrow-down"></i>
                                                }
                                                }
                                            </th>
                                        <th>Rol</th>
                                        <th>Rol Ver</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {


                                        <tr>

                                            <td>@item.NameSurname</td>
                                            <td>@item.Email</td>
                                            @await Component.InvokeAsync("AssignRolellist", new { id = item.Id })


                                        </tr>
                                    }
                                </tbody>
                            </table>

                            <br />

                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>
    <br />
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("UserRoleList", new { page, SearchString = ViewData["CurrentFilterSearch"], sortOrder = @ViewData["CurrentSort"] }))


</body>
